1. Считая, что кубический фут равен 7.481 галлона, написать программу, запрашивающую у пользователя число галлонов
и выводящую на экран эквивалентный объем в кубических футах.
2. Напишите программу, выводящую следующую таблицу:
1990 135
1991 7290
1992 11300
1993 16200
В программе использовать только один оператор с System.out.print() или System.out.println().
3. Напишите программу, генерирующую следующий вывод: 10 20 19
Используйте представление числа 10 в виде целой константы. Для вывода числа 20 воспользуйтесь
 одной из арифметических операций с присваиванием, а для вывода числа 19 — операцией декремента.
4. Напишите программу, выводящую на экран ваше любимое стихотворение.
Для разбиения на строчки используйте подходящую управляющую последовательность.
5. На биржевых торгах за 1 фунт стерлингов давали $1.487, за франк — $0.172,
 за немецкую марку — $0.584, а за японскую йену — $0.00955. Напишите программу,
  которая запрашивает денежную сумму в долларах, а затем выводит эквивалентные суммы в других валютах.
6. Температуру, измеренную в градусах по Цельсию, можно перевести в градусы
 по Фаренгейту путем умножения на 9/5 и сложения с числом 32. Напишите программу,
  запрашивающую температуру в градусах по Цельсию и отображающую ее эквивалент по Фаренгейту.
7. Две дроби, а/b и c/d можно сложить следующим образом: a/b + c/d = (a*d + b*c)/(b*d),
 например, 1/4 + 2/3 = (1*3 + 4*2)/4*3 = 11/12
8. Напишите программу, запрашивающую у пользователя значения двух дробей,
 а затем выводящую результат, также записанный в форме дроби. Взаимодействие
  программы с пользователем может выглядеть, например, следующим образом:
   Введите первую дробь: 1/2 Введите вторую дробь: 2/5 Сумма равна 9/10
9. Устаревшая денежная система Великобритании состояла из фунтов, шиллингов и пенсов.
 1 фунт был равен 20 шиллингам, а 1 шиллинг — 12 пенсам. Для записи использовалась система,
  состоящая из знака £ и трех десятичных значений, разделенных точками.
   Например, запись £5.2.8 обозначала 5 фунтов, 2 шиллинга и 8 пенсов
    (пенс — множественное число от пенни). Современная денежная система,
    принятая в 50-е годы XX века, состоит только из фунтов и пенсов, причем один фунт равен 100 пенсам.
     Такой фунт называют десятичным. Таким образом, в новой денежной системе указанная
      сумма будет обозначаться как £5.13 (если быть точнее, £5.1333333).
      Напишите программу, которая будет преобразовывать сумму, записанную в старом формате
      (фунты, шиллинги, пенсы), в новый формат (фунты, пенсы). Форматом взаимодействия программы
      с пользователем может являться следующий: Введите количество фунтов: 7 Заедите количество шиллингов:
      17 Введите количество пенсов: 9 Десятичных фунтов: £7.89 В большинстве компиляторов
       для представления знака £ используется десятичный код 156. Некоторые компиляторы позволяют
       скопировать знак фунта прямо из таблицы символов Windows.
10. Напишите программу, выполняющую действия, обратные тем, которые описаны в упражнении 10, то
 есть запрашивающую у пользователя сумму, указанную в десятичных фунтах, и переводящую ее в старую
 систему фунтов, шиллингов и пенсов. Пример взаимодействия программы с пользователем может выглядеть так:
  Введите число десятичных фунтов: 3.51 Эквивалентная сумма в старой форме записи: £3.10.2 Обратите внимание
   на то, что если вам придется присваивать вещественное значение (например, 12.34) переменной целого типа,
   то его дробная часть (0.34) будет потеряна, а целая переменная получит значение 12.
    Чтобы избежать предупреждения со стороны компилятора, используйте явное преобразование типов.
     Можно использовать операторы, подобные приведенным ниже: float decpounds;
     // сумма в десятичных фунтах int pounds; // сумма в старых фунтах float decfrac;
     // десятичная дробная часть pounds = static_cast(decpounds);
     // отбрасывание // дробной части decfrac = decpounds - pounds; // прибавление дробной части
      чтобы получить число шиллингов, следует умножить на 20 значение переменной decfrac.
       Аналогичным образом можно получить число пенсов.






       1. Предположим, вы хотите создать таблицу умножения на заданное число.
       Напишите программу, которая позволяет пользователю ввести это число,
       а затем генерирует таблицу размером 20 строк на 10 столбцов. Первые
       строки результата работы программы должны выглядеть примерно сле-
       дующим образом:
       Введите число: 7
       7142128354249566370
       77849198105112119126133140
       147154161168175182189196203210

       2. Напишите программу, предлагающую пользователю осуществить перевод
       температуры из шкалы Цельсия в шкалу Фаренгейта или наоборот, а затем
       осуществите преобразование. Используйте в программе переменные веще-
       ственного типа. Взаимодействие программы с пользователем может вы-
       глядеть следующим образом:
       Нажмите 1 для перевода шкалы Цельсия в шкалу Фаренгейта,
       2 для перевода шкалы Фаренгейта в шкалу Цельсия: 2
       Введите температуру по Фаренгейту: 70
       Значение по Цельсию: 21.111111

       3. Создайте эквивалент калькулятора, выполняющего четыре основных ариф-
       метических операции. Программа должна запрашивать ввод пользовате-
       лем первого операнда, знака операции и второго операнда. Для хранения
       операндов следует использовать переменные вещественного типа. Выбрать
       операцию можно при помощи оператора switch. В конце программа долж-
       на отображать результат на экране. Результат работы программы с поль-
       зователем может выглядеть следующим образом:
       Введите первый операнд, операцию и второй операнд: 10 / 3
       Результат равен 3.333333
       Выполнить еще одну операцию (y/n)? y
       Введите первый операнд, операцию и второй операнд: 12 + 100
       Результат равен 112
       Выполнить еще одну операцию (y/n)? n

       4. При помощи цикла for изобразите на экране пирамиду из символов 'X'.
       Верхняя часть пирамиды должна выглядеть следующим образом:
       х
       ххх
       ххххх
       ххххххх
       ххххххххх
       Вся пирамида должна быть высотой не 5 линий, как изображено здесь,
       а 20 линий. Одним из способов ее построения может служить использова-
       ние двух вложенных циклов, из которых внутренний будет заниматься
       печатанием символов 'X' и пробелов, а другой осуществлять переход на
       одну строку вниз.

       5. Измените программу factor, таким образом,
       чтобы она циклически запрашивала ввод пользователем числа и вычисля-
       ла его факториал, пока пользователь не введет 0. В этом случае програм-
       ма должна завершиться. При необходимости вы можете использовать со-
       ответствующие операторы программы factor в цикле do или while.
       	public class Factor {
           public static void main(String[] args) {
               int numb;
               long fact = 1;
               System.out.println("Введите целое число: ");
               Scanner scanner = new Scanner(System.in);
               numb = scanner.nextInt();
               for (int j = numb; j > 0; j--) {
                   fact *= j;
               }
               System.out.println("Факториал числа равен: " + fact);
           }
       }


       6. Напишите программу, рассчитывающую сумму денег, которые вы получи-
       те при вложении начальной суммы с фиксированной процентной ставкой
       дохода через определенное количество лет. Пользователь должен вводить
       с клавиатуры начальный вклад, число лет и процентную ставку. Приме-
       ром результата работы программы может быть следующий:
       Введите начальный вклад: 3000
       Введите число лет: 10
       Введите процентную ставку: 5.5
       Через 10 лет вы получите 5124.43 доллара.
       В конце первого года вы получите 3 000 + (3 000*0.055) = 3165 долларов.
       В конце следующего года вы получите 3 165 + (3 165*0.055) = 3339.08 дол-
       ларов. Подобные вычисления удобно производить с помощью цикла for.

       7. Напишите программу, которая циклически будет запрашивать ввод поль-
       зователем двух денежных сумм, выраженных в фунтах, шиллингах и пен-
       сах (см. упражнения 10 и 12 главы 2). Программа должна складывать
       введенные суммы и выводить на экран результат, также выраженный в
       фунтах, шиллингах и пенсах. После каждой итерации программа должна
       спрашивать пользователя, желает ли он продолжать работу программы.
       При этом рекомендуется использовать цикл do. Естественной формой
       взаимодействия программы с пользователем была бы следующая:
       Введите первую сумму £5 10 6
       Введите первую сумму £3 2 6
       Всего £8 13 0
       Продолжить(y/n) ?
       Для того чтобы сложить две суммы, вам необходимо учесть заем одного
       шиллинга в том случае, если число пенсов окажется больше 11, и одного
       фунта, если число шиллингов окажется больше 19.

       8. Представьте, что вы собираетесь пригласить к себе шестерых гостей, но за
       вашим столом могут разместиться всего лишь 4 человека Сколькими
       способами можно разместить четырех из шести гостей за обеденным сто-
       лом? Каждый из шести гостей может разместиться на первом стуле. Каж-
       дый из оставшихся пяти гостей может занять второй стул. На третьем
       стуле может разместиться один их четырех гостей, и на четвертом — один
       из трех оставшихся гостей. Двоим из гостей не достанется ни одного
       места. Таким образом, число возможных рассадок гостей за столом равно
       6*5*4*3 = 360. Напишите программу, которая будет производить аналогич-
       ные вычисления для любого числа гостей и любого числа мест за столом
       (при этом предполагается, что число гостей не меньше числа мест). Про-
       грамма не должна быть сложной, и вычисление можно организовать с по-
       мощью простого цикла for.

       9. Модифицируйте программу, описанную в упражнении 6, так, чтобы вме-
       сто вычисления текущей суммы на вашем счете она вычисляла, сколько
       лет потребуется для того, чтобы при заданной процентной ставке и вели-
       чине начального вклада сумма на вашем счете достигла запрашиваемого
       вами значения. Для хранения найденного числа лет используйте перемен-
       ную целого типа (можно отбросить дробную часть значения, полученного
       в результате расчета). Самостоятельно выберите тип цикла, подходящий
       для решения задачи.

       10. Создайте калькулятор, выполняющий действия над денежными суммами,
       выраженными в фунтах, шиллингах и пенсах . Калькулятор должен складывать и вычитать вводимые значе-
       ния, а также производить умножение денежной суммы на вещественное
       число (операция умножения двух денежных сумм не имеет смысла, по-
       140 скольку квадратных денежных единиц не существует. Деление одной де-
       нежной суммы на другую мы тоже не будем рассматривать). Организация
       взаимодействия с калькулятором описана в упражнении 4 этой главы.

       11. Создайте калькулятор, выполняющий четыре арифметических действия
       над дробями (см. упражнение 9 главы 2 и упражнение 4 этой главы).
       Формулы, демонстрирующие выполнение арифметических операций над
       дробями, приведены ниже.
       Сложение: a/b+c/d=(a*d+b*c)/(b*d)
       Вычитание: a/b-c/d=(a*d-b*c)/(b*d)
       Умножение: a/b*c/d=(a*c)/(b*d)
       Деление: a/b/c/d = (a*d)/(b*c)
       Пользователь должен сначала ввести первый операнд, затем знак опера-
       ции и второй операнд. После вычисления результата программа должна
       отобразить его на экране и запросить пользователя о его желании произ-
       вести еще одну операцию